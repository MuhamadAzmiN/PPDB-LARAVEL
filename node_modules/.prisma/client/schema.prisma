generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                    Int         @id @default(autoincrement()) // Kunci utama dengan auto-increment
  username              String      @db.VarChar(100) // Menyimpan username
  email                 String      @unique // Email unik
  password              String      @db.VarChar(100) // Menyimpan kata sandi
  name                  String      @db.VarChar(100) // Nama pengguna
  role                  Role        @default(user) // Role pengguna
  token                 String?     @db.VarChar(100) // Token opsional
  keterangan_lulus      Boolean     @default(false) // Keterangan lulus
  keterangan_pembayaran Boolean     @default(false) // Keterangan daftar
  keterangan_daftar     Boolean     @default(false)
  pendaftar             Daftar[] // Relasi ke model Daftar
  transaksi             Transaksi[] // Relasi ke model Transaksi

  @@map("users") // Pemetaan ke tabel "users" di database
}

model Daftar {
  id           Int      @id @default(autoincrement()) // Kunci utama dengan auto-increment
  userId       Int // Relasi ke User
  nama_lengkap String   @db.VarChar(100) // Nama lengkap pendaftar
  asal_sekolah String   @db.VarChar(100) // Asal sekolah
  jurusan      String   @db.VarChar(100) // Jurusan yang dipilih
  no_hp        String   @db.VarChar(15) // Nomor telepon pendaftar
  alamat       String   @db.VarChar(255) // Alamat lengkap
  createdAt    DateTime @default(now()) // Waktu pendaftaran
  updatedAt    DateTime @updatedAt // Waktu terakhir update
  user         User     @relation(fields: [userId], references: [id]) // Relasi ke User

  @@map("daftars") // Pemetaan ke tabel "daftars" di database
}

model Transaksi {
  id                Int      @id @default(autoincrement()) // Kunci utama dengan auto-increment
  userId            Int // Relasi ke User
  jumlah_pembayaran Decimal  @db.Decimal(10, 2) // Jumlah pembayaran
  metode_pembayaran String   @db.VarChar(50) // Metode pembayaran
  tanggal_transaksi DateTime @default(now()) // Waktu transaksi
  deskripsi         String?  @db.VarChar(255) // Deskripsi opsional
  createdAt         DateTime @default(now()) // Waktu pencatatan transaksi
  updatedAt         DateTime @updatedAt // Waktu terakhir update
  user              User     @relation(fields: [userId], references: [id]) // Relasi ke User

  @@map("transaksis") // Pemetaan ke tabel "transaksis" di database
}

enum Role {
  user
  admin
}
